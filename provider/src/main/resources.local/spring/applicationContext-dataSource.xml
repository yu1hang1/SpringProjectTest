<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="initialSize" value="${store.druid.minIdle}"/>
        <property name="minIdle" value="${store.druid.minIdle}"/>
        <property name="maxActive" value="${store.druid.maxActive}"/>
        <property name="maxWait" value="${store.druid.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${store.druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${store.druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="${store.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${store.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${store.druid.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${store.druid.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${store.druid.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="filters" value="wall,log4j"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
        <property name="useGlobalDataSourceStat" value="${store.druid.useGloalDataSourceStat}"/>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="${store.druid.slowSqlMillis}"/>
        <property name="logSlowSql" value="${store.druid.logSlowSql}"/>
        <property name="mergeSql" value="true"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.wormpex.hang.ims.archetype.model"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wormpex.hang.ims.archetype.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>